digraph osiris_cfg {
rankdir = TB;
size = "240"
graph[fontname = Courier, fontsize = 14.0, labeljust = l, nojustify = true];node[shape = record];
"0x0"[label="0x00000000 PUSH1 0x60 \l0x00000002 PUSH1 0x40 \l0x00000004 MSTORE \l0x00000005 PUSH1 0x04 \l0x00000007 CALLDATASIZE \l0x00000008 LT \l0x00000009 PUSH2 0x00c5 \l0x0000000c JUMPI \l"];
"0x0" -> "0xc5" [color="green" label=" If(ULE(4, Id_size), 0, 1) != 0"];
"0x0" -> "0xd" [color="red" label=" Not(If(ULE(4, Id_size), 0, 1) != 0)"];
"0x40c"[label="0x0000040c JUMPDEST \l0x0000040d POP \l0x0000040e SWAP3 \l0x0000040f POP \l0x00000410 POP \l0x00000411 POP \l0x00000412 PUSH1 0x40 \l0x00000414 MLOAD \l0x00000415 DUP1 \l0x00000416 SWAP2 \l0x00000417 SUB \l0x00000418 SWAP1 \l0x00000419 RETURN \l"];
"0xd"[label="0x0000000d PUSH1 0x00 \l0x0000000f CALLDATALOAD \l0x00000010 PUSH29 0x0100000000000000000000000000000000000000000000000000000000 \l0x0000002e SWAP1 \l0x0000002f DIV \l0x00000030 PUSH4 0xffffffff \l0x00000035 AND \l0x00000036 DUP1 \l0x00000037 PUSH4 0x06fdde03 \l0x0000003c EQ \l0x0000003d PUSH2 0x00ca \l0x00000040 JUMPI \l"];
"0xd" -> "0xca" [color="green" label=" If(Extract(255, 224, Hexagon) == 117300739, 1, 0) != 0"];
"0xd" -> "0x41" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 117300739, 1, 0) != 0)"];
"0x41a"[label="0x0000041a JUMPDEST \l0x0000041b CALLVALUE \l0x0000041c ISZERO \l0x0000041d PUSH2 0x0425 \l0x00000420 JUMPI \l"];
"0x41a" -> "0x425" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x41a" -> "0x421" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0xaf"[label="0x000000af DUP1 \l0x000000b0 PUSH4 0xa9059cbb \l0x000000b5 EQ \l0x000000b6 PUSH2 0x041a \l0x000000b9 JUMPI \l"];
"0xaf" -> "0x41a" [color="green" label=" If(Extract(255, 224, Hexagon) == 2835717307, 1, 0) != 0"];
"0xaf" -> "0xba" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 2835717307, 1, 0) != 0)"];
"0x421"[label="0x00000421 PUSH1 0x00 \l0x00000423 DUP1 \l0x00000424 REVERT \l"];
"0x425"[label="0x00000425 JUMPDEST \l0x00000426 PUSH2 0x045a \l0x00000429 PUSH1 0x04 \l0x0000042b DUP1 \l0x0000042c DUP1 \l0x0000042d CALLDATALOAD \l0x0000042e PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000443 AND \l0x00000444 SWAP1 \l0x00000445 PUSH1 0x20 \l0x00000447 ADD \l0x00000448 SWAP1 \l0x00000449 SWAP2 \l0x0000044a SWAP1 \l0x0000044b DUP1 \l0x0000044c CALLDATALOAD \l0x0000044d SWAP1 \l0x0000044e PUSH1 0x20 \l0x00000450 ADD \l0x00000451 SWAP1 \l0x00000452 SWAP2 \l0x00000453 SWAP1 \l0x00000454 POP \l0x00000455 POP \l0x00000456 PUSH2 0x097c \l0x00000459 JUMP \l"];
"0x425" -> "0x97c" [color="black"];
"0xa2e"[label="0x00000a2e PUSH1 0x00 \l0x00000a30 DUP1 \l0x00000a31 REVERT \l"];
"0xa32"[label="0x00000a32 JUMPDEST \l0x00000a33 PUSH1 0x01 \l0x00000a35 PUSH1 0x00 \l0x00000a37 DUP4 \l0x00000a38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000a4d AND \l0x00000a4e PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000a63 AND \l0x00000a64 DUP2 \l0x00000a65 MSTORE \l0x00000a66 PUSH1 0x20 \l0x00000a68 ADD \l0x00000a69 SWAP1 \l0x00000a6a DUP2 \l0x00000a6b MSTORE \l0x00000a6c PUSH1 0x20 \l0x00000a6e ADD \l0x00000a6f PUSH1 0x00 \l0x00000a71 SHA3 \l0x00000a72 SLOAD \l0x00000a73 DUP2 \l0x00000a74 PUSH1 0x01 \l0x00000a76 PUSH1 0x00 \l0x00000a78 DUP6 \l0x00000a79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000a8e AND \l0x00000a8f PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000aa4 AND \l0x00000aa5 DUP2 \l0x00000aa6 MSTORE \l0x00000aa7 PUSH1 0x20 \l0x00000aa9 ADD \l0x00000aaa SWAP1 \l0x00000aab DUP2 \l0x00000aac MSTORE \l0x00000aad PUSH1 0x20 \l0x00000aaf ADD \l0x00000ab0 PUSH1 0x00 \l0x00000ab2 SHA3 \l0x00000ab3 SLOAD \l0x00000ab4 ADD \l0x00000ab5 GT \l0x00000ab6 ISZERO \l0x00000ab7 ISZERO \l0x00000ab8 PUSH2 0x0ac0 \l0x00000abb JUMPI \l"];
"0xa32" -> "0xac0" [color="green" label=" If(ULE(Ia_store_some_var_11 + _value, Ia_store_some_var_11),
   0,
   1) !=
0"];
"0xa32" -> "0xabc" [color="red" label=" Not(If(ULE(Ia_store_some_var_11 + _value,
           Ia_store_some_var_11),
       0,
       1) !=
    0)"];
"0x837"[label="0x00000837 PUSH1 0x00 \l0x00000839 DUP1 \l0x0000083a REVERT \l"];
"0x23a"[label="0x0000023a JUMPDEST \l0x0000023b PUSH1 0x40 \l0x0000023d MLOAD \l0x0000023e DUP1 \l0x0000023f DUP3 \l0x00000240 ISZERO \l0x00000241 ISZERO \l0x00000242 ISZERO \l0x00000243 ISZERO \l0x00000244 DUP2 \l0x00000245 MSTORE \l0x00000246 PUSH1 0x20 \l0x00000248 ADD \l0x00000249 SWAP2 \l0x0000024a POP \l0x0000024b POP \l0x0000024c PUSH1 0x40 \l0x0000024e MLOAD \l0x0000024f DUP1 \l0x00000250 SWAP2 \l0x00000251 SUB \l0x00000252 SWAP1 \l0x00000253 RETURN \l"];
"0x83b"[label="0x0000083b JUMPDEST \l0x0000083c DUP2 \l0x0000083d PUSH1 0x01 \l0x0000083f PUSH1 0x00 \l0x00000841 CALLER \l0x00000842 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000857 AND \l0x00000858 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000086d AND \l0x0000086e DUP2 \l0x0000086f MSTORE \l0x00000870 PUSH1 0x20 \l0x00000872 ADD \l0x00000873 SWAP1 \l0x00000874 DUP2 \l0x00000875 MSTORE \l0x00000876 PUSH1 0x20 \l0x00000878 ADD \l0x00000879 PUSH1 0x00 \l0x0000087b SHA3 \l0x0000087c PUSH1 0x00 \l0x0000087e DUP3 \l0x0000087f DUP3 \l0x00000880 SLOAD \l0x00000881 SUB \l0x00000882 SWAP3 \l0x00000883 POP \l0x00000884 POP \l0x00000885 DUP2 \l0x00000886 SWAP1 \l0x00000887 SSTORE \l0x00000888 POP \l0x00000889 DUP2 \l0x0000088a PUSH1 0x01 \l0x0000088c PUSH1 0x00 \l0x0000088e DUP1 \l0x0000088f PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000008a4 AND \l0x000008a5 DUP2 \l0x000008a6 MSTORE \l0x000008a7 PUSH1 0x20 \l0x000008a9 ADD \l0x000008aa SWAP1 \l0x000008ab DUP2 \l0x000008ac MSTORE \l0x000008ad PUSH1 0x20 \l0x000008af ADD \l0x000008b0 PUSH1 0x00 \l0x000008b2 SHA3 \l0x000008b3 PUSH1 0x00 \l0x000008b5 DUP3 \l0x000008b6 DUP3 \l0x000008b7 SLOAD \l0x000008b8 ADD  **[Error: Overflow]**\l0x000008b9 SWAP3 \l0x000008ba POP \l0x000008bb POP \l0x000008bc DUP2 \l0x000008bd SWAP1 \l0x000008be SSTORE \l0x000008bf POP \l0x000008c0 DUP2 \l0x000008c1 PUSH1 0x00 \l0x000008c3 DUP1 \l0x000008c4 DUP3 \l0x000008c5 DUP3 \l0x000008c6 SLOAD \l0x000008c7 SUB  **[Error: Underflow]**\l0x000008c8 SWAP3 \l0x000008c9 POP \l0x000008ca POP \l0x000008cb DUP2 \l0x000008cc SWAP1 \l0x000008cd SSTORE \l0x000008ce POP \l0x000008cf CALLER \l0x000008d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000008e5 AND \l0x000008e6 PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 \l0x00000907 DUP4 \l0x00000908 PUSH1 0x40 \l0x0000090a MLOAD \l0x0000090b DUP1 \l0x0000090c DUP3 \l0x0000090d DUP2 \l0x0000090e MSTORE \l0x0000090f PUSH1 0x20 \l0x00000911 ADD \l0x00000912 SWAP2 \l0x00000913 POP \l0x00000914 POP \l0x00000915 PUSH1 0x40 \l0x00000917 MLOAD \l0x00000918 DUP1 \l0x00000919 SWAP2 \l0x0000091a SUB \l0x0000091b SWAP1 \l0x0000091c LOG2 \l0x0000091d PUSH1 0x01 \l0x0000091f SWAP1 \l0x00000920 POP \l0x00000921 SWAP2 \l0x00000922 SWAP1 \l0x00000923 POP \l0x00000924 JUMP \l",style=filled,color=red];
"0x83b" -> "0x2fc" [color="black"];
"0x41"[label="0x00000041 DUP1 \l0x00000042 PUSH4 0x095ea7b3 \l0x00000047 EQ \l0x00000048 PUSH2 0x0158 \l0x0000004b JUMPI \l"];
"0x41" -> "0x158" [color="green" label=" If(Extract(255, 224, Hexagon) == 157198259, 1, 0) != 0"];
"0x41" -> "0x4c" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 157198259, 1, 0) != 0)"];
"0x4c"[label="0x0000004c DUP1 \l0x0000004d PUSH4 0x18160ddd \l0x00000052 EQ \l0x00000053 PUSH2 0x01b2 \l0x00000056 JUMPI \l"];
"0x4c" -> "0x1b2" [color="green" label=" If(Extract(255, 224, Hexagon) == 404098525, 1, 0) != 0"];
"0x4c" -> "0x57" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 404098525, 1, 0) != 0)"];
"0x163"[label="0x00000163 JUMPDEST \l0x00000164 PUSH2 0x0198 \l0x00000167 PUSH1 0x04 \l0x00000169 DUP1 \l0x0000016a DUP1 \l0x0000016b CALLDATALOAD \l0x0000016c PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000181 AND \l0x00000182 SWAP1 \l0x00000183 PUSH1 0x20 \l0x00000185 ADD \l0x00000186 SWAP1 \l0x00000187 SWAP2 \l0x00000188 SWAP1 \l0x00000189 DUP1 \l0x0000018a CALLDATALOAD \l0x0000018b SWAP1 \l0x0000018c PUSH1 0x20 \l0x0000018e ADD \l0x0000018f SWAP1 \l0x00000190 SWAP2 \l0x00000191 SWAP1 \l0x00000192 POP \l0x00000193 POP \l0x00000194 PUSH2 0x0519 \l0x00000197 JUMP \l"];
"0x163" -> "0x519" [color="black"];
"0x254"[label="0x00000254 JUMPDEST \l0x00000255 CALLVALUE \l0x00000256 ISZERO \l0x00000257 PUSH2 0x025f \l0x0000025a JUMPI \l"];
"0x254" -> "0x25f" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x254" -> "0x25b" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x57"[label="0x00000057 DUP1 \l0x00000058 PUSH4 0x23b872dd \l0x0000005d EQ \l0x0000005e PUSH2 0x01db \l0x00000061 JUMPI \l"];
"0x57" -> "0x1db" [color="green" label=" If(Extract(255, 224, Hexagon) == 599290589, 1, 0) != 0"];
"0x57" -> "0x62" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 599290589, 1, 0) != 0)"];
"0x45a"[label="0x0000045a JUMPDEST \l0x0000045b PUSH1 0x40 \l0x0000045d MLOAD \l0x0000045e DUP1 \l0x0000045f DUP3 \l0x00000460 ISZERO \l0x00000461 ISZERO \l0x00000462 ISZERO \l0x00000463 ISZERO \l0x00000464 DUP2 \l0x00000465 MSTORE \l0x00000466 PUSH1 0x20 \l0x00000468 ADD \l0x00000469 SWAP2 \l0x0000046a POP \l0x0000046b POP \l0x0000046c PUSH1 0x40 \l0x0000046e MLOAD \l0x0000046f DUP1 \l0x00000470 SWAP2 \l0x00000471 SUB \l0x00000472 SWAP1 \l0x00000473 RETURN \l"];
"0x25b"[label="0x0000025b PUSH1 0x00 \l0x0000025d DUP1 \l0x0000025e REVERT \l"];
"0x25f"[label="0x0000025f JUMPDEST \l0x00000260 PUSH2 0x0267 \l0x00000263 PUSH2 0x07d6 \l0x00000266 JUMP \l"];
"0x25f" -> "0x7d6" [color="black"];
"0x62"[label="0x00000062 DUP1 \l0x00000063 PUSH4 0x27edf097 \l0x00000068 EQ \l0x00000069 PUSH2 0x0254 \l0x0000006c JUMPI \l"];
"0x62" -> "0x254" [color="green" label=" If(Extract(255, 224, Hexagon) == 669905047, 1, 0) != 0"];
"0x62" -> "0x6d" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 669905047, 1, 0) != 0)"];
"0x267"[label="0x00000267 JUMPDEST \l0x00000268 PUSH1 0x40 \l0x0000026a MLOAD \l0x0000026b DUP1 \l0x0000026c DUP3 \l0x0000026d PUSH1 0xff \l0x0000026f AND \l0x00000270 PUSH1 0xff \l0x00000272 AND \l0x00000273 DUP2 \l0x00000274 MSTORE \l0x00000275 PUSH1 0x20 \l0x00000277 ADD \l0x00000278 SWAP2 \l0x00000279 POP \l0x0000027a POP \l0x0000027b PUSH1 0x40 \l0x0000027d MLOAD \l0x0000027e DUP1 \l0x0000027f SWAP2 \l0x00000280 SUB \l0x00000281 SWAP1 \l0x00000282 RETURN \l"];
"0xc6a"[label="0x00000c6a STOP \l"];
"0x6d"[label="0x0000006d DUP1 \l0x0000006e PUSH4 0x313ce567 \l0x00000073 EQ \l0x00000074 PUSH2 0x0283 \l0x00000077 JUMPI \l"];
"0x6d" -> "0x283" [color="green" label=" If(Extract(255, 224, Hexagon) == 826074471, 1, 0) != 0"];
"0x6d" -> "0x78" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 826074471, 1, 0) != 0)"];
"0x474"[label="0x00000474 JUMPDEST \l0x00000475 CALLVALUE \l0x00000476 ISZERO \l0x00000477 PUSH2 0x047f \l0x0000047a JUMPI \l"];
"0x474" -> "0x47f" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x474" -> "0x47b" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x78"[label="0x00000078 DUP1 \l0x00000079 PUSH4 0x378dc3dc \l0x0000007e EQ \l0x0000007f PUSH2 0x02b2 \l0x00000082 JUMPI \l"];
"0x78" -> "0x2b2" [color="green" label=" If(Extract(255, 224, Hexagon) == 932037596, 1, 0) != 0"];
"0x78" -> "0x83" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 932037596, 1, 0) != 0)"];
"0x47b"[label="0x0000047b PUSH1 0x00 \l0x0000047d DUP1 \l0x0000047e REVERT \l"];
"0x47f"[label="0x0000047f JUMPDEST \l0x00000480 PUSH2 0x04ca \l0x00000483 PUSH1 0x04 \l0x00000485 DUP1 \l0x00000486 DUP1 \l0x00000487 CALLDATALOAD \l0x00000488 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000049d AND \l0x0000049e SWAP1 \l0x0000049f PUSH1 0x20 \l0x000004a1 ADD \l0x000004a2 SWAP1 \l0x000004a3 SWAP2 \l0x000004a4 SWAP1 \l0x000004a5 DUP1 \l0x000004a6 CALLDATALOAD \l0x000004a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000004bc AND \l0x000004bd SWAP1 \l0x000004be PUSH1 0x20 \l0x000004c0 ADD \l0x000004c1 SWAP1 \l0x000004c2 SWAP2 \l0x000004c3 SWAP1 \l0x000004c4 POP \l0x000004c5 POP \l0x000004c6 PUSH2 0x0993 \l0x000004c9 JUMP \l"];
"0x47f" -> "UNKNOWN_TARGET" [color="black"];
"0x83"[label="0x00000083 DUP1 \l0x00000084 PUSH4 0x42966c68 \l0x00000089 EQ \l0x0000008a PUSH2 0x02db \l0x0000008d JUMPI \l"];
"0x83" -> "0x2db" [color="green" label=" If(Extract(255, 224, Hexagon) == 1117154408, 1, 0) != 0"];
"0x83" -> "0x8e" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 1117154408, 1, 0) != 0)"];
"0x28a"[label="0x0000028a PUSH1 0x00 \l0x0000028c DUP1 \l0x0000028d REVERT \l"];
"0x8e"[label="0x0000008e DUP1 \l0x0000008f PUSH4 0x70a08231 \l0x00000094 EQ \l0x00000095 PUSH2 0x0316 \l0x00000098 JUMPI \l"];
"0x8e" -> "0x316" [color="green" label=" If(Extract(255, 224, Hexagon) == 1889567281, 1, 0) != 0"];
"0x8e" -> "0x99" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 1889567281, 1, 0) != 0)"];
"0x296"[label="0x00000296 JUMPDEST \l0x00000297 PUSH1 0x40 \l0x00000299 MLOAD \l0x0000029a DUP1 \l0x0000029b DUP3 \l0x0000029c PUSH1 0xff \l0x0000029e AND \l0x0000029f PUSH1 0xff \l0x000002a1 AND \l0x000002a2 DUP2 \l0x000002a3 MSTORE \l0x000002a4 PUSH1 0x20 \l0x000002a6 ADD \l0x000002a7 SWAP2 \l0x000002a8 POP \l0x000002a9 POP \l0x000002aa PUSH1 0x40 \l0x000002ac MLOAD \l0x000002ad DUP1 \l0x000002ae SWAP2 \l0x000002af SUB \l0x000002b0 SWAP1 \l0x000002b1 RETURN \l"];
"0x99"[label="0x00000099 DUP1 \l0x0000009a PUSH4 0x771282f6 \l0x0000009f EQ \l0x000000a0 PUSH2 0x0363 \l0x000000a3 JUMPI \l"];
"0x99" -> "0x363" [color="green" label=" If(Extract(255, 224, Hexagon) == 1997701878, 1, 0) != 0"];
"0x99" -> "0xa4" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 1997701878, 1, 0) != 0)"];
"0x2c5"[label="0x000002c5 JUMPDEST \l0x000002c6 PUSH1 0x40 \l0x000002c8 MLOAD \l0x000002c9 DUP1 \l0x000002ca DUP3 \l0x000002cb DUP2 \l0x000002cc MSTORE \l0x000002cd PUSH1 0x20 \l0x000002cf ADD \l0x000002d0 SWAP2 \l0x000002d1 POP \l0x000002d2 POP \l0x000002d3 PUSH1 0x40 \l0x000002d5 MLOAD \l0x000002d6 DUP1 \l0x000002d7 SWAP2 \l0x000002d8 SUB \l0x000002d9 SWAP1 \l0x000002da RETURN \l"];
"0x6a0"[label="0x000006a0 JUMPDEST \l0x000006a1 PUSH1 0x00 \l0x000006a3 DUP1 \l0x000006a4 SLOAD \l0x000006a5 SWAP1 \l0x000006a6 POP \l0x000006a7 SWAP1 \l0x000006a8 JUMP \l"];
"0x6a0" -> "0x1c5" [color="black"];
"0xa4"[label="0x000000a4 DUP1 \l0x000000a5 PUSH4 0x95d89b41 \l0x000000aa EQ \l0x000000ab PUSH2 0x038c \l0x000000ae JUMPI \l"];
"0xa4" -> "0x38c" [color="green" label=" If(Extract(255, 224, Hexagon) == 2514000705, 1, 0) != 0"];
"0xa4" -> "0xaf" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 2514000705, 1, 0) != 0)"];
"0x6a9"[label="0x000006a9 JUMPDEST \l0x000006aa PUSH1 0x00 \l0x000006ac DUP2 \l0x000006ad PUSH1 0x02 \l0x000006af PUSH1 0x00 \l0x000006b1 DUP7 \l0x000006b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000006c7 AND \l0x000006c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000006dd AND \l0x000006de DUP2 \l0x000006df MSTORE \l0x000006e0 PUSH1 0x20 \l0x000006e2 ADD \l0x000006e3 SWAP1 \l0x000006e4 DUP2 \l0x000006e5 MSTORE \l0x000006e6 PUSH1 0x20 \l0x000006e8 ADD \l0x000006e9 PUSH1 0x00 \l0x000006eb SHA3 \l0x000006ec PUSH1 0x00 \l0x000006ee CALLER \l0x000006ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000704 AND \l0x00000705 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000071a AND \l0x0000071b DUP2 \l0x0000071c MSTORE \l0x0000071d PUSH1 0x20 \l0x0000071f ADD \l0x00000720 SWAP1 \l0x00000721 DUP2 \l0x00000722 MSTORE \l0x00000723 PUSH1 0x20 \l0x00000725 ADD \l0x00000726 PUSH1 0x00 \l0x00000728 SHA3 \l0x00000729 SLOAD \l0x0000072a LT \l0x0000072b ISZERO \l0x0000072c ISZERO \l0x0000072d ISZERO \l0x0000072e PUSH2 0x0736 \l0x00000731 JUMPI \l"];
"0x6a9" -> "0x736" [color="green" label=" If(ULE(_value, Ia_store_some_var_6), 1, 0) != 0"];
"0x6a9" -> "0x732" [color="red" label=" Not(If(ULE(_value, Ia_store_some_var_6), 1, 0) != 0)"];
"0x11d"[label="0x0000011d JUMPDEST \l0x0000011e POP \l0x0000011f POP \l0x00000120 POP \l0x00000121 POP \l0x00000122 SWAP1 \l0x00000123 POP \l0x00000124 SWAP1 \l0x00000125 DUP2 \l0x00000126 ADD \l0x00000127 SWAP1 \l0x00000128 PUSH1 0x1f \l0x0000012a AND \l0x0000012b DUP1 \l0x0000012c ISZERO \l0x0000012d PUSH2 0x014a \l0x00000130 JUMPI \l"];
"0x11d" -> "0x14a" [color="green" label=" False"];
"0x11d" -> "0x131" [color="red" label=" Not(False)"];
"0x2b2"[label="0x000002b2 JUMPDEST \l0x000002b3 CALLVALUE \l0x000002b4 ISZERO \l0x000002b5 PUSH2 0x02bd \l0x000002b8 JUMPI \l"];
"0x2b2" -> "0x2bd" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x2b2" -> "0x2b9" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x2b9"[label="0x000002b9 PUSH1 0x00 \l0x000002bb DUP1 \l0x000002bc REVERT \l"];
"0xba"[label="0x000000ba DUP1 \l0x000000bb PUSH4 0xdd62ed3e \l0x000000c0 EQ \l0x000000c1 PUSH2 0x0474 \l0x000000c4 JUMPI \l"];
"0xba" -> "0x474" [color="green" label=" If(Extract(255, 224, Hexagon) == 3714247998, 1, 0) != 0"];
"0xba" -> "0xc5" [color="red" label=" Not(If(Extract(255, 224, Hexagon) == 3714247998, 1, 0) != 0)"];
"0xabc"[label="0x00000abc PUSH1 0x00 \l0x00000abe DUP1 \l0x00000abf REVERT \l"];
"0x2bd"[label="0x000002bd JUMPDEST \l0x000002be PUSH2 0x02c5 \l0x000002c1 PUSH2 0x07e0 \l0x000002c4 JUMP \l"];
"0x2bd" -> "0x7e0" [color="black"];
"0xac0"[label="0x00000ac0 JUMPDEST \l0x00000ac1 PUSH1 0x02 \l0x00000ac3 PUSH1 0xff \l0x00000ac5 AND \l0x00000ac6 DUP2 \l0x00000ac7 ADD  **[Error: Overflow]**\l0x00000ac8 PUSH1 0x01 \l0x00000aca PUSH1 0x00 \l0x00000acc DUP6 \l0x00000acd PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000ae2 AND \l0x00000ae3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000af8 AND \l0x00000af9 DUP2 \l0x00000afa MSTORE \l0x00000afb PUSH1 0x20 \l0x00000afd ADD \l0x00000afe SWAP1 \l0x00000aff DUP2 \l0x00000b00 MSTORE \l0x00000b01 PUSH1 0x20 \l0x00000b03 ADD \l0x00000b04 PUSH1 0x00 \l0x00000b06 SHA3 \l0x00000b07 PUSH1 0x00 \l0x00000b09 DUP3 \l0x00000b0a DUP3 \l0x00000b0b SLOAD \l0x00000b0c SUB \l0x00000b0d SWAP3 \l0x00000b0e POP \l0x00000b0f POP \l0x00000b10 DUP2 \l0x00000b11 SWAP1 \l0x00000b12 SSTORE \l0x00000b13 POP \l0x00000b14 DUP1 \l0x00000b15 PUSH1 0x01 \l0x00000b17 PUSH1 0x00 \l0x00000b19 DUP5 \l0x00000b1a PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000b2f AND \l0x00000b30 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000b45 AND \l0x00000b46 DUP2 \l0x00000b47 MSTORE \l0x00000b48 PUSH1 0x20 \l0x00000b4a ADD \l0x00000b4b SWAP1 \l0x00000b4c DUP2 \l0x00000b4d MSTORE \l0x00000b4e PUSH1 0x20 \l0x00000b50 ADD \l0x00000b51 PUSH1 0x00 \l0x00000b53 SHA3 \l0x00000b54 PUSH1 0x00 \l0x00000b56 DUP3 \l0x00000b57 DUP3 \l0x00000b58 SLOAD \l0x00000b59 ADD \l0x00000b5a SWAP3 \l0x00000b5b POP \l0x00000b5c POP \l0x00000b5d DUP2 \l0x00000b5e SWAP1 \l0x00000b5f SSTORE \l0x00000b60 POP \l0x00000b61 PUSH1 0x02 \l0x00000b63 PUSH1 0xff \l0x00000b65 AND \l0x00000b66 PUSH1 0x01 \l0x00000b68 PUSH1 0x00 \l0x00000b6a DUP1 \l0x00000b6b PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000b80 AND \l0x00000b81 DUP2 \l0x00000b82 MSTORE \l0x00000b83 PUSH1 0x20 \l0x00000b85 ADD \l0x00000b86 SWAP1 \l0x00000b87 DUP2 \l0x00000b88 MSTORE \l0x00000b89 PUSH1 0x20 \l0x00000b8b ADD \l0x00000b8c PUSH1 0x00 \l0x00000b8e SHA3 \l0x00000b8f PUSH1 0x00 \l0x00000b91 DUP3 \l0x00000b92 DUP3 \l0x00000b93 SLOAD \l0x00000b94 ADD  **[Error: Overflow]**\l0x00000b95 SWAP3 \l0x00000b96 POP \l0x00000b97 POP \l0x00000b98 DUP2 \l0x00000b99 SWAP1 \l0x00000b9a SSTORE \l0x00000b9b POP \l0x00000b9c PUSH1 0x02 \l0x00000b9e PUSH1 0xff \l0x00000ba0 AND \l0x00000ba1 PUSH1 0x00 \l0x00000ba3 DUP1 \l0x00000ba4 DUP3 \l0x00000ba5 DUP3 \l0x00000ba6 SLOAD \l0x00000ba7 SUB  **[Error: Underflow]**\l0x00000ba8 SWAP3 \l0x00000ba9 POP \l0x00000baa POP \l0x00000bab DUP2 \l0x00000bac SWAP1 \l0x00000bad SSTORE \l0x00000bae POP \l0x00000baf DUP3 \l0x00000bb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000bc5 AND \l0x00000bc6 PUSH32 0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5 \l0x00000be7 PUSH1 0x02 \l0x00000be9 PUSH1 0x40 \l0x00000beb MLOAD \l0x00000bec DUP1 \l0x00000bed DUP3 \l0x00000bee PUSH1 0xff \l0x00000bf0 AND \l0x00000bf1 DUP2 \l0x00000bf2 MSTORE \l0x00000bf3 PUSH1 0x20 \l0x00000bf5 ADD \l0x00000bf6 SWAP2 \l0x00000bf7 POP \l0x00000bf8 POP \l0x00000bf9 PUSH1 0x40 \l0x00000bfb MLOAD \l0x00000bfc DUP1 \l0x00000bfd SWAP2 \l0x00000bfe SUB \l0x00000bff SWAP1 \l0x00000c00 LOG2 \l0x00000c01 DUP2 \l0x00000c02 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000c17 AND \l0x00000c18 DUP4 \l0x00000c19 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000c2e AND \l0x00000c2f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef \l0x00000c50 DUP4 \l0x00000c51 PUSH1 0x40 \l0x00000c53 MLOAD \l0x00000c54 DUP1 \l0x00000c55 DUP3 \l0x00000c56 DUP2 \l0x00000c57 MSTORE \l0x00000c58 PUSH1 0x20 \l0x00000c5a ADD \l0x00000c5b SWAP2 \l0x00000c5c POP \l0x00000c5d POP \l0x00000c5e PUSH1 0x40 \l0x00000c60 MLOAD \l0x00000c61 DUP1 \l0x00000c62 SWAP2 \l0x00000c63 SUB \l0x00000c64 SWAP1 \l0x00000c65 LOG3 \l0x00000c66 POP \l0x00000c67 POP \l0x00000c68 POP \l0x00000c69 JUMP \l",style=filled,color=red];
"0xac0" -> "0x7cb" [color="black"];
"0xc5"[label="0x000000c5 JUMPDEST \l0x000000c6 PUSH1 0x00 \l0x000000c8 DUP1 \l0x000000c9 REVERT \l"];
"0x4ca"[label="0x000004ca JUMPDEST \l0x000004cb PUSH1 0x40 \l0x000004cd MLOAD \l0x000004ce DUP1 \l0x000004cf DUP3 \l0x000004d0 DUP2 \l0x000004d1 MSTORE \l0x000004d2 PUSH1 0x20 \l0x000004d4 ADD \l0x000004d5 SWAP2 \l0x000004d6 POP \l0x000004d7 POP \l0x000004d8 PUSH1 0x40 \l0x000004da MLOAD \l0x000004db DUP1 \l0x000004dc SWAP2 \l0x000004dd SUB \l0x000004de SWAP1 \l0x000004df RETURN \l"];
"0xd1"[label="0x000000d1 PUSH1 0x00 \l0x000000d3 DUP1 \l0x000000d4 REVERT \l"];
"0xd5"[label="0x000000d5 JUMPDEST \l0x000000d6 PUSH2 0x00dd \l0x000000d9 PUSH2 0x04e0 \l0x000000dc JUMP \l"];
"0xd5" -> "0x4e0" [color="black"];
"0x2db"[label="0x000002db JUMPDEST \l0x000002dc CALLVALUE \l0x000002dd ISZERO \l0x000002de PUSH2 0x02e6 \l0x000002e1 JUMPI \l"];
"0x2db" -> "0x2e6" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x2db" -> "0x2e2" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0xdd"[label="0x000000dd JUMPDEST \l0x000000de PUSH1 0x40 \l0x000000e0 MLOAD \l0x000000e1 DUP1 \l0x000000e2 DUP1 \l0x000000e3 PUSH1 0x20 \l0x000000e5 ADD \l0x000000e6 DUP3 \l0x000000e7 DUP2 \l0x000000e8 SUB \l0x000000e9 DUP3 \l0x000000ea MSTORE \l0x000000eb DUP4 \l0x000000ec DUP2 \l0x000000ed DUP2 \l0x000000ee MLOAD \l0x000000ef DUP2 \l0x000000f0 MSTORE \l0x000000f1 PUSH1 0x20 \l0x000000f3 ADD \l0x000000f4 SWAP2 \l0x000000f5 POP \l0x000000f6 DUP1 \l0x000000f7 MLOAD \l0x000000f8 SWAP1 \l0x000000f9 PUSH1 0x20 \l0x000000fb ADD \l0x000000fc SWAP1 \l0x000000fd DUP1 \l0x000000fe DUP4 \l0x000000ff DUP4 \l0x00000100 PUSH1 0x00 \l"];
"0xdd" -> "0x102" [color="black"];
"0x4e0"[label="0x000004e0 JUMPDEST \l0x000004e1 PUSH1 0x40 \l0x000004e3 DUP1 \l0x000004e4 MLOAD \l0x000004e5 SWAP1 \l0x000004e6 DUP2 \l0x000004e7 ADD \l0x000004e8 PUSH1 0x40 \l0x000004ea MSTORE \l0x000004eb DUP1 \l0x000004ec PUSH1 0x07 \l0x000004ee DUP2 \l0x000004ef MSTORE \l0x000004f0 PUSH1 0x20 \l0x000004f2 ADD \l0x000004f3 PUSH32 0x48657861676f6e00000000000000000000000000000000000000000000000000 \l0x00000514 DUP2 \l0x00000515 MSTORE \l0x00000516 POP \l0x00000517 DUP2 \l0x00000518 JUMP \l"];
"0x4e0" -> "0xdd" [color="black"];
"0x2e2"[label="0x000002e2 PUSH1 0x00 \l0x000002e4 DUP1 \l0x000002e5 REVERT \l"];
"0x2e6"[label="0x000002e6 JUMPDEST \l0x000002e7 PUSH2 0x02fc \l0x000002ea PUSH1 0x04 \l0x000002ec DUP1 \l0x000002ed DUP1 \l0x000002ee CALLDATALOAD \l0x000002ef SWAP1 \l0x000002f0 PUSH1 0x20 \l0x000002f2 ADD \l0x000002f3 SWAP1 \l0x000002f4 SWAP2 \l0x000002f5 SWAP1 \l0x000002f6 POP \l0x000002f7 POP \l0x000002f8 PUSH2 0x07eb \l0x000002fb JUMP \l"];
"0x2e6" -> "0x7eb" [color="black"];
"0x2fc"[label="0x000002fc JUMPDEST \l0x000002fd PUSH1 0x40 \l0x000002ff MLOAD \l0x00000300 DUP1 \l0x00000301 DUP3 \l0x00000302 ISZERO \l0x00000303 ISZERO \l0x00000304 ISZERO \l0x00000305 ISZERO \l0x00000306 DUP2 \l0x00000307 MSTORE \l0x00000308 PUSH1 0x20 \l0x0000030a ADD \l0x0000030b SWAP2 \l0x0000030c POP \l0x0000030d POP \l0x0000030e PUSH1 0x40 \l0x00000310 MLOAD \l0x00000311 DUP1 \l0x00000312 SWAP2 \l0x00000313 SUB \l0x00000314 SWAP1 \l0x00000315 RETURN \l"];
"0xca"[label="0x000000ca JUMPDEST \l0x000000cb CALLVALUE \l0x000000cc ISZERO \l0x000000cd PUSH2 0x00d5 \l0x000000d0 JUMPI \l"];
"0xca" -> "0xd5" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0xca" -> "0xd1" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x102"[label="0x00000102 JUMPDEST \l0x00000103 DUP4 \l0x00000104 DUP2 \l0x00000105 LT \l0x00000106 ISZERO \l0x00000107 PUSH2 0x011d \l0x0000010a JUMPI \l"];
"0x102" -> "0x11d" [color="green" label=" True"];
"0x102" -> "0x10b" [color="red" label=" Not(True)"];
"0x10b"[label="0x0000010b DUP1 \l0x0000010c DUP3 \l0x0000010d ADD \l0x0000010e MLOAD \l0x0000010f DUP2 \l0x00000110 DUP5 \l0x00000111 ADD \l0x00000112 MSTORE \l0x00000113 PUSH1 0x20 \l0x00000115 DUP2 \l0x00000116 ADD \l0x00000117 SWAP1 \l0x00000118 POP \l0x00000119 PUSH2 0x0102 \l0x0000011c JUMP \l"];
"0x10b" -> "0x102" [color="black"];
"0x283"[label="0x00000283 JUMPDEST \l0x00000284 CALLVALUE \l0x00000285 ISZERO \l0x00000286 PUSH2 0x028e \l0x00000289 JUMPI \l"];
"0x283" -> "0x28e" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x283" -> "0x28a" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x316"[label="0x00000316 JUMPDEST \l0x00000317 CALLVALUE \l0x00000318 ISZERO \l0x00000319 PUSH2 0x0321 \l0x0000031c JUMPI \l"];
"0x316" -> "0x321" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x316" -> "0x31d" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x519"[label="0x00000519 JUMPDEST \l0x0000051a PUSH1 0x00 \l0x0000051c DUP1 \l0x0000051d DUP3 \l0x0000051e EQ \l0x0000051f DUP1 \l0x00000520 PUSH2 0x05a5 \l0x00000523 JUMPI \l"];
"0x519" -> "0x5a5" [color="green" label=" If(_value == 0, 1, 0) != 0"];
"0x519" -> "0x524" [color="red" label=" Not(If(_value == 0, 1, 0) != 0)"];
"0x31d"[label="0x0000031d PUSH1 0x00 \l0x0000031f DUP1 \l0x00000320 REVERT \l"];
"0x321"[label="0x00000321 JUMPDEST \l0x00000322 PUSH2 0x034d \l0x00000325 PUSH1 0x04 \l0x00000327 DUP1 \l0x00000328 DUP1 \l0x00000329 CALLDATALOAD \l0x0000032a PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000033f AND \l0x00000340 SWAP1 \l0x00000341 PUSH1 0x20 \l0x00000343 ADD \l0x00000344 SWAP1 \l0x00000345 SWAP2 \l0x00000346 SWAP1 \l0x00000347 POP \l0x00000348 POP \l0x00000349 PUSH2 0x0925 \l0x0000034c JUMP \l"];
"0x321" -> "UNKNOWN_TARGET" [color="black"];
"0x1db"[label="0x000001db JUMPDEST \l0x000001dc CALLVALUE \l0x000001dd ISZERO \l0x000001de PUSH2 0x01e6 \l0x000001e1 JUMPI \l"];
"0x1db" -> "0x1e6" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x1db" -> "0x1e2" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x524"[label="0x00000524 POP \l0x00000525 PUSH1 0x00 \l0x00000527 PUSH1 0x02 \l0x00000529 PUSH1 0x00 \l0x0000052b CALLER \l0x0000052c PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000541 AND \l0x00000542 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000557 AND \l0x00000558 DUP2 \l0x00000559 MSTORE \l0x0000055a PUSH1 0x20 \l0x0000055c ADD \l0x0000055d SWAP1 \l0x0000055e DUP2 \l0x0000055f MSTORE \l0x00000560 PUSH1 0x20 \l0x00000562 ADD \l0x00000563 PUSH1 0x00 \l0x00000565 SHA3 \l0x00000566 PUSH1 0x00 \l0x00000568 DUP6 \l0x00000569 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000057e AND \l0x0000057f PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000594 AND \l0x00000595 DUP2 \l0x00000596 MSTORE \l0x00000597 PUSH1 0x20 \l0x00000599 ADD \l0x0000059a SWAP1 \l0x0000059b DUP2 \l0x0000059c MSTORE \l0x0000059d PUSH1 0x20 \l0x0000059f ADD \l0x000005a0 PUSH1 0x00 \l0x000005a2 SHA3 \l0x000005a3 SLOAD \l0x000005a4 EQ \l"];
"0x524" -> "0x5a5" [color="black"];
"0x925"[label="0x00000925 JUMPDEST \l0x00000926 PUSH1 0x01 \l0x00000928 PUSH1 0x20 \l0x0000092a MSTORE \l0x0000092b DUP1 \l0x0000092c PUSH1 0x00 \l0x0000092e MSTORE \l0x0000092f PUSH1 0x40 \l0x00000931 PUSH1 0x00 \l0x00000933 SHA3 \l0x00000934 PUSH1 0x00 \l0x00000936 SWAP2 \l0x00000937 POP \l0x00000938 SWAP1 \l0x00000939 POP \l0x0000093a SLOAD \l0x0000093b DUP2 \l0x0000093c JUMP \l"];
"0x925" -> "UNKNOWN_TARGET" [color="black"];
"0x131"[label="0x00000131 DUP1 \l0x00000132 DUP3 \l0x00000133 SUB \l0x00000134 DUP1 \l0x00000135 MLOAD \l0x00000136 PUSH1 0x01 \l0x00000138 DUP4 \l0x00000139 PUSH1 0x20 \l0x0000013b SUB \l0x0000013c PUSH2 0x0100 \l0x0000013f EXP \l0x00000140 SUB \l0x00000141 NOT \l0x00000142 AND \l0x00000143 DUP2 \l0x00000144 MSTORE \l0x00000145 PUSH1 0x20 \l0x00000147 ADD \l0x00000148 SWAP2 \l0x00000149 POP \l"];
"0x131" -> "0x14a" [color="black"];
"0x732"[label="0x00000732 PUSH1 0x00 \l0x00000734 DUP1 \l0x00000735 REVERT \l"];
"0x736"[label="0x00000736 JUMPDEST \l0x00000737 DUP2 \l0x00000738 PUSH1 0x02 \l0x0000073a PUSH1 0x00 \l0x0000073c DUP7 \l0x0000073d PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000752 AND \l0x00000753 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000768 AND \l0x00000769 DUP2 \l0x0000076a MSTORE \l0x0000076b PUSH1 0x20 \l0x0000076d ADD \l0x0000076e SWAP1 \l0x0000076f DUP2 \l0x00000770 MSTORE \l0x00000771 PUSH1 0x20 \l0x00000773 ADD \l0x00000774 PUSH1 0x00 \l0x00000776 SHA3 \l0x00000777 PUSH1 0x00 \l0x00000779 CALLER \l0x0000077a PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000078f AND \l0x00000790 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000007a5 AND \l0x000007a6 DUP2 \l0x000007a7 MSTORE \l0x000007a8 PUSH1 0x20 \l0x000007aa ADD \l0x000007ab SWAP1 \l0x000007ac DUP2 \l0x000007ad MSTORE \l0x000007ae PUSH1 0x20 \l0x000007b0 ADD \l0x000007b1 PUSH1 0x00 \l0x000007b3 SHA3 \l0x000007b4 PUSH1 0x00 \l0x000007b6 DUP3 \l0x000007b7 DUP3 \l0x000007b8 SLOAD \l0x000007b9 SUB \l0x000007ba SWAP3 \l0x000007bb POP \l0x000007bc POP \l0x000007bd DUP2 \l0x000007be SWAP1 \l0x000007bf SSTORE \l0x000007c0 POP \l0x000007c1 PUSH2 0x07cb \l0x000007c4 DUP5 \l0x000007c5 DUP5 \l0x000007c6 DUP5 \l0x000007c7 PUSH2 0x09b8 \l0x000007ca JUMP \l"];
"0x736" -> "0x9b8" [color="black"];
"0x93d"[label="0x0000093d JUMPDEST \l0x0000093e PUSH1 0x00 \l0x00000940 SLOAD \l0x00000941 DUP2 \l0x00000942 JUMP \l"];
"0x93d" -> "0x376" [color="black"];
"0x943"[label="0x00000943 JUMPDEST \l0x00000944 PUSH1 0x40 \l0x00000946 DUP1 \l0x00000947 MLOAD \l0x00000948 SWAP1 \l0x00000949 DUP2 \l0x0000094a ADD \l0x0000094b PUSH1 0x40 \l0x0000094d MSTORE \l0x0000094e DUP1 \l0x0000094f PUSH1 0x03 \l0x00000951 DUP2 \l0x00000952 MSTORE \l0x00000953 PUSH1 0x20 \l0x00000955 ADD \l0x00000956 PUSH32 0x4858470000000000000000000000000000000000000000000000000000000000 \l0x00000977 DUP2 \l0x00000978 MSTORE \l0x00000979 POP \l0x0000097a DUP2 \l0x0000097b JUMP \l"];
"0x943" -> "0x39f" [color="black"];
"0x14a"[label="0x0000014a JUMPDEST \l0x0000014b POP \l0x0000014c SWAP3 \l0x0000014d POP \l0x0000014e POP \l0x0000014f POP \l0x00000150 PUSH1 0x40 \l0x00000152 MLOAD \l0x00000153 DUP1 \l0x00000154 SWAP2 \l0x00000155 SUB \l0x00000156 SWAP1 \l0x00000157 RETURN \l"];
"0x34d"[label="0x0000034d JUMPDEST \l0x0000034e PUSH1 0x40 \l0x00000350 MLOAD \l0x00000351 DUP1 \l0x00000352 DUP3 \l0x00000353 DUP2 \l0x00000354 MSTORE \l0x00000355 PUSH1 0x20 \l0x00000357 ADD \l0x00000358 SWAP2 \l0x00000359 POP \l0x0000035a POP \l0x0000035b PUSH1 0x40 \l0x0000035d MLOAD \l0x0000035e DUP1 \l0x0000035f SWAP2 \l0x00000360 SUB \l0x00000361 SWAP1 \l0x00000362 RETURN \l"];
"0x28e"[label="0x0000028e JUMPDEST \l0x0000028f PUSH2 0x0296 \l0x00000292 PUSH2 0x07db \l0x00000295 JUMP \l"];
"0x28e" -> "0x7db" [color="black"];
"0x158"[label="0x00000158 JUMPDEST \l0x00000159 CALLVALUE \l0x0000015a ISZERO \l0x0000015b PUSH2 0x0163 \l0x0000015e JUMPI \l"];
"0x158" -> "0x163" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x158" -> "0x15f" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x15f"[label="0x0000015f PUSH1 0x00 \l0x00000161 DUP1 \l0x00000162 REVERT \l"];
"0x363"[label="0x00000363 JUMPDEST \l0x00000364 CALLVALUE \l0x00000365 ISZERO \l0x00000366 PUSH2 0x036e \l0x00000369 JUMPI \l"];
"0x363" -> "0x36e" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x363" -> "0x36a" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x36a"[label="0x0000036a PUSH1 0x00 \l0x0000036c DUP1 \l0x0000036d REVERT \l"];
"0x36e"[label="0x0000036e JUMPDEST \l0x0000036f PUSH2 0x0376 \l0x00000372 PUSH2 0x093d \l0x00000375 JUMP \l"];
"0x36e" -> "0x93d" [color="black"];
"0x993"[label="0x00000993 JUMPDEST \l0x00000994 PUSH1 0x02 \l0x00000996 PUSH1 0x20 \l0x00000998 MSTORE \l0x00000999 DUP2 \l0x0000099a PUSH1 0x00 \l0x0000099c MSTORE \l0x0000099d PUSH1 0x40 \l0x0000099f PUSH1 0x00 \l0x000009a1 SHA3 \l0x000009a2 PUSH1 0x20 \l0x000009a4 MSTORE \l0x000009a5 DUP1 \l0x000009a6 PUSH1 0x00 \l0x000009a8 MSTORE \l0x000009a9 PUSH1 0x40 \l0x000009ab PUSH1 0x00 \l0x000009ad SHA3 \l0x000009ae PUSH1 0x00 \l0x000009b0 SWAP2 \l0x000009b1 POP \l0x000009b2 SWAP2 \l0x000009b3 POP \l0x000009b4 POP \l0x000009b5 SLOAD \l0x000009b6 DUP2 \l0x000009b7 JUMP \l"];
"0x993" -> "UNKNOWN_TARGET" [color="black"];
"0x376"[label="0x00000376 JUMPDEST \l0x00000377 PUSH1 0x40 \l0x00000379 MLOAD \l0x0000037a DUP1 \l0x0000037b DUP3 \l0x0000037c DUP2 \l0x0000037d MSTORE \l0x0000037e PUSH1 0x20 \l0x00000380 ADD \l0x00000381 SWAP2 \l0x00000382 POP \l0x00000383 POP \l0x00000384 PUSH1 0x40 \l0x00000386 MLOAD \l0x00000387 DUP1 \l0x00000388 SWAP2 \l0x00000389 SUB \l0x0000038a SWAP1 \l0x0000038b RETURN \l"];
"0x97c"[label="0x0000097c JUMPDEST \l0x0000097d PUSH1 0x00 \l0x0000097f PUSH2 0x0989 \l0x00000982 CALLER \l0x00000983 DUP5 \l0x00000984 DUP5 \l0x00000985 PUSH2 0x09b8 \l0x00000988 JUMP \l"];
"0x97c" -> "0x9b8" [color="black"];
"0x989"[label="0x00000989 JUMPDEST \l0x0000098a PUSH1 0x01 \l0x0000098c SWAP1 \l0x0000098d POP \l0x0000098e SWAP3 \l0x0000098f SWAP2 \l0x00000990 POP \l0x00000991 POP \l0x00000992 JUMP \l"];
"0x989" -> "0x45a" [color="black"];
"0x38c"[label="0x0000038c JUMPDEST \l0x0000038d CALLVALUE \l0x0000038e ISZERO \l0x0000038f PUSH2 0x0397 \l0x00000392 JUMPI \l"];
"0x38c" -> "0x397" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x38c" -> "0x393" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x393"[label="0x00000393 PUSH1 0x00 \l0x00000395 DUP1 \l0x00000396 REVERT \l"];
"0x397"[label="0x00000397 JUMPDEST \l0x00000398 PUSH2 0x039f \l0x0000039b PUSH2 0x0943 \l0x0000039e JUMP \l"];
"0x397" -> "0x943" [color="black"];
"0x198"[label="0x00000198 JUMPDEST \l0x00000199 PUSH1 0x40 \l0x0000019b MLOAD \l0x0000019c DUP1 \l0x0000019d DUP3 \l0x0000019e ISZERO \l0x0000019f ISZERO \l0x000001a0 ISZERO \l0x000001a1 ISZERO \l0x000001a2 DUP2 \l0x000001a3 MSTORE \l0x000001a4 PUSH1 0x20 \l0x000001a6 ADD \l0x000001a7 SWAP2 \l0x000001a8 POP \l0x000001a9 POP \l0x000001aa PUSH1 0x40 \l0x000001ac MLOAD \l0x000001ad DUP1 \l0x000001ae SWAP2 \l0x000001af SUB \l0x000001b0 SWAP1 \l0x000001b1 RETURN \l"];
"0x39f"[label="0x0000039f JUMPDEST \l0x000003a0 PUSH1 0x40 \l0x000003a2 MLOAD \l0x000003a3 DUP1 \l0x000003a4 DUP1 \l0x000003a5 PUSH1 0x20 \l0x000003a7 ADD \l0x000003a8 DUP3 \l0x000003a9 DUP2 \l0x000003aa SUB \l0x000003ab DUP3 \l0x000003ac MSTORE \l0x000003ad DUP4 \l0x000003ae DUP2 \l0x000003af DUP2 \l0x000003b0 MLOAD \l0x000003b1 DUP2 \l0x000003b2 MSTORE \l0x000003b3 PUSH1 0x20 \l0x000003b5 ADD \l0x000003b6 SWAP2 \l0x000003b7 POP \l0x000003b8 DUP1 \l0x000003b9 MLOAD \l0x000003ba SWAP1 \l0x000003bb PUSH1 0x20 \l0x000003bd ADD \l0x000003be SWAP1 \l0x000003bf DUP1 \l0x000003c0 DUP4 \l0x000003c1 DUP4 \l0x000003c2 PUSH1 0x00 \l"];
"0x39f" -> "0x3c4" [color="black"];
"0x5a5"[label="0x000005a5 JUMPDEST \l0x000005a6 ISZERO \l0x000005a7 ISZERO \l0x000005a8 PUSH2 0x05b0 \l0x000005ab JUMPI \l"];
"0x5a5" -> "0x5b0" [color="green" label=" If(Ia_store_some_var_4 == 0, 1, 0) != 0"];
"0x5a5" -> "0x5ac" [color="red" label=" Not(If(Ia_store_some_var_4 == 0, 1, 0) != 0)"];
"0x5ac"[label="0x000005ac PUSH1 0x00 \l0x000005ae DUP1 \l0x000005af REVERT \l"];
"0x5b0"[label="0x000005b0 JUMPDEST \l0x000005b1 DUP2 \l0x000005b2 PUSH1 0x02 \l0x000005b4 PUSH1 0x00 \l0x000005b6 CALLER \l0x000005b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000005cc AND \l0x000005cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000005e2 AND \l0x000005e3 DUP2 \l0x000005e4 MSTORE \l0x000005e5 PUSH1 0x20 \l0x000005e7 ADD \l0x000005e8 SWAP1 \l0x000005e9 DUP2 \l0x000005ea MSTORE \l0x000005eb PUSH1 0x20 \l0x000005ed ADD \l0x000005ee PUSH1 0x00 \l0x000005f0 SHA3 \l0x000005f1 PUSH1 0x00 \l0x000005f3 DUP6 \l0x000005f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000609 AND \l0x0000060a PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000061f AND \l0x00000620 DUP2 \l0x00000621 MSTORE \l0x00000622 PUSH1 0x20 \l0x00000624 ADD \l0x00000625 SWAP1 \l0x00000626 DUP2 \l0x00000627 MSTORE \l0x00000628 PUSH1 0x20 \l0x0000062a ADD \l0x0000062b PUSH1 0x00 \l0x0000062d SHA3 \l0x0000062e DUP2 \l0x0000062f SWAP1 \l0x00000630 SSTORE \l0x00000631 POP \l0x00000632 DUP3 \l0x00000633 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000648 AND \l0x00000649 CALLER \l0x0000064a PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000065f AND \l0x00000660 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 \l0x00000681 DUP5 \l0x00000682 PUSH1 0x40 \l0x00000684 MLOAD \l0x00000685 DUP1 \l0x00000686 DUP3 \l0x00000687 DUP2 \l0x00000688 MSTORE \l0x00000689 PUSH1 0x20 \l0x0000068b ADD \l0x0000068c SWAP2 \l0x0000068d POP \l0x0000068e POP \l0x0000068f PUSH1 0x40 \l0x00000691 MLOAD \l0x00000692 DUP1 \l0x00000693 SWAP2 \l0x00000694 SUB \l0x00000695 SWAP1 \l0x00000696 LOG3 \l0x00000697 PUSH1 0x01 \l0x00000699 SWAP1 \l0x0000069a POP \l0x0000069b SWAP3 \l0x0000069c SWAP2 \l0x0000069d POP \l0x0000069e POP \l0x0000069f JUMP \l"];
"0x5b0" -> "0x198" [color="black"];
"0x1b2"[label="0x000001b2 JUMPDEST \l0x000001b3 CALLVALUE \l0x000001b4 ISZERO \l0x000001b5 PUSH2 0x01bd \l0x000001b8 JUMPI \l"];
"0x1b2" -> "0x1bd" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x1b2" -> "0x1b9" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x9b8"[label="0x000009b8 JUMPDEST \l0x000009b9 PUSH1 0x00 \l0x000009bb DUP3 \l0x000009bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000009d1 AND \l0x000009d2 EQ \l0x000009d3 ISZERO \l0x000009d4 ISZERO \l0x000009d5 ISZERO \l0x000009d6 PUSH2 0x09de \l0x000009d9 JUMPI \l"];
"0x9b8" -> "0x9de" [color="green" label=" If(Extract(159, 0, _to) == 0, 0, 1) != 0"];
"0x9b8" -> "0x9da" [color="red" label=" Not(If(Extract(159, 0, _to) == 0, 0, 1) != 0)"];
"0x1b9"[label="0x000001b9 PUSH1 0x00 \l0x000001bb DUP1 \l0x000001bc REVERT \l"];
"0x1bd"[label="0x000001bd JUMPDEST \l0x000001be PUSH2 0x01c5 \l0x000001c1 PUSH2 0x06a0 \l0x000001c4 JUMP \l"];
"0x1bd" -> "0x6a0" [color="black"];
"0x3c4"[label="0x000003c4 JUMPDEST \l0x000003c5 DUP4 \l0x000003c6 DUP2 \l0x000003c7 LT \l0x000003c8 ISZERO \l0x000003c9 PUSH2 0x03df \l0x000003cc JUMPI \l"];
"0x3c4" -> "0x3df" [color="green" label=" True"];
"0x3c4" -> "0x3cd" [color="red" label=" Not(True)"];
"0x1c5"[label="0x000001c5 JUMPDEST \l0x000001c6 PUSH1 0x40 \l0x000001c8 MLOAD \l0x000001c9 DUP1 \l0x000001ca DUP3 \l0x000001cb DUP2 \l0x000001cc MSTORE \l0x000001cd PUSH1 0x20 \l0x000001cf ADD \l0x000001d0 SWAP2 \l0x000001d1 POP \l0x000001d2 POP \l0x000001d3 PUSH1 0x40 \l0x000001d5 MLOAD \l0x000001d6 DUP1 \l0x000001d7 SWAP2 \l0x000001d8 SUB \l0x000001d9 SWAP1 \l0x000001da RETURN \l"];
"0x7cb"[label="0x000007cb JUMPDEST \l0x000007cc PUSH1 0x01 \l0x000007ce SWAP1 \l0x000007cf POP \l0x000007d0 SWAP4 \l0x000007d1 SWAP3 \l0x000007d2 POP \l0x000007d3 POP \l0x000007d4 POP \l0x000007d5 JUMP \l"];
"0x7cb" -> "0x23a" [color="black"];
"0x3cd"[label="0x000003cd DUP1 \l0x000003ce DUP3 \l0x000003cf ADD \l0x000003d0 MLOAD \l0x000003d1 DUP2 \l0x000003d2 DUP5 \l0x000003d3 ADD \l0x000003d4 MSTORE \l0x000003d5 PUSH1 0x20 \l0x000003d7 DUP2 \l0x000003d8 ADD \l0x000003d9 SWAP1 \l0x000003da POP \l0x000003db PUSH2 0x03c4 \l0x000003de JUMP \l"];
"0x3cd" -> "0x3c4" [color="black"];
"0x7d6"[label="0x000007d6 JUMPDEST \l0x000007d7 PUSH1 0x02 \l0x000007d9 DUP2 \l0x000007da JUMP \l"];
"0x7d6" -> "0x267" [color="black"];
"0x9da"[label="0x000009da PUSH1 0x00 \l0x000009dc DUP1 \l0x000009dd REVERT \l"];
"0x7db"[label="0x000007db JUMPDEST \l0x000007dc PUSH1 0x04 \l0x000007de DUP2 \l0x000007df JUMP \l"];
"0x7db" -> "0x296" [color="black"];
"0x9de"[label="0x000009de JUMPDEST \l0x000009df PUSH1 0x02 \l0x000009e1 PUSH1 0xff \l0x000009e3 AND \l0x000009e4 DUP2 \l0x000009e5 ADD  **[Error: Overflow]**\l0x000009e6 PUSH1 0x01 \l0x000009e8 PUSH1 0x00 \l0x000009ea DUP6 \l0x000009eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000a00 AND \l0x00000a01 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000a16 AND \l0x00000a17 DUP2 \l0x00000a18 MSTORE \l0x00000a19 PUSH1 0x20 \l0x00000a1b ADD \l0x00000a1c SWAP1 \l0x00000a1d DUP2 \l0x00000a1e MSTORE \l0x00000a1f PUSH1 0x20 \l0x00000a21 ADD \l0x00000a22 PUSH1 0x00 \l0x00000a24 SHA3 \l0x00000a25 SLOAD \l0x00000a26 LT \l0x00000a27 ISZERO \l0x00000a28 ISZERO \l0x00000a29 ISZERO \l0x00000a2a PUSH2 0x0a32 \l0x00000a2d JUMPI \l",style=filled,color=red];
"0x9de" -> "0xa32" [color="green" label=" If(ULE(2 + _value, Ia_store_some_var_10), 1, 0) != 0"];
"0x9de" -> "0xa2e" [color="red" label=" Not(If(ULE(2 + _value, Ia_store_some_var_10), 1, 0) != 0)"];
"0x3df"[label="0x000003df JUMPDEST \l0x000003e0 POP \l0x000003e1 POP \l0x000003e2 POP \l0x000003e3 POP \l0x000003e4 SWAP1 \l0x000003e5 POP \l0x000003e6 SWAP1 \l0x000003e7 DUP2 \l0x000003e8 ADD \l0x000003e9 SWAP1 \l0x000003ea PUSH1 0x1f \l0x000003ec AND \l0x000003ed DUP1 \l0x000003ee ISZERO \l0x000003ef PUSH2 0x040c \l0x000003f2 JUMPI \l"];
"0x3df" -> "0x40c" [color="green" label=" False"];
"0x3df" -> "0x3f3" [color="red" label=" Not(False)"];
"0x7e0"[label="0x000007e0 JUMPDEST \l0x000007e1 PUSH7 0x017dfcdece4000 \l0x000007e9 DUP2 \l0x000007ea JUMP \l"];
"0x7e0" -> "0x2c5" [color="black"];
"0x1e2"[label="0x000001e2 PUSH1 0x00 \l0x000001e4 DUP1 \l0x000001e5 REVERT \l"];
"0x1e6"[label="0x000001e6 JUMPDEST \l0x000001e7 PUSH2 0x023a \l0x000001ea PUSH1 0x04 \l0x000001ec DUP1 \l0x000001ed DUP1 \l0x000001ee CALLDATALOAD \l0x000001ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000204 AND \l0x00000205 SWAP1 \l0x00000206 PUSH1 0x20 \l0x00000208 ADD \l0x00000209 SWAP1 \l0x0000020a SWAP2 \l0x0000020b SWAP1 \l0x0000020c DUP1 \l0x0000020d CALLDATALOAD \l0x0000020e PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000223 AND \l0x00000224 SWAP1 \l0x00000225 PUSH1 0x20 \l0x00000227 ADD \l0x00000228 SWAP1 \l0x00000229 SWAP2 \l0x0000022a SWAP1 \l0x0000022b DUP1 \l0x0000022c CALLDATALOAD \l0x0000022d SWAP1 \l0x0000022e PUSH1 0x20 \l0x00000230 ADD \l0x00000231 SWAP1 \l0x00000232 SWAP2 \l0x00000233 SWAP1 \l0x00000234 POP \l0x00000235 POP \l0x00000236 PUSH2 0x06a9 \l0x00000239 JUMP \l"];
"0x1e6" -> "0x6a9" [color="black"];
"0x7eb"[label="0x000007eb JUMPDEST \l0x000007ec PUSH1 0x00 \l0x000007ee DUP2 \l0x000007ef PUSH1 0x01 \l0x000007f1 PUSH1 0x00 \l0x000007f3 CALLER \l0x000007f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000809 AND \l0x0000080a PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000081f AND \l0x00000820 DUP2 \l0x00000821 MSTORE \l0x00000822 PUSH1 0x20 \l0x00000824 ADD \l0x00000825 SWAP1 \l0x00000826 DUP2 \l0x00000827 MSTORE \l0x00000828 PUSH1 0x20 \l0x0000082a ADD \l0x0000082b PUSH1 0x00 \l0x0000082d SHA3 \l0x0000082e SLOAD \l0x0000082f LT \l0x00000830 ISZERO \l0x00000831 ISZERO \l0x00000832 ISZERO \l0x00000833 PUSH2 0x083b \l0x00000836 JUMPI \l"];
"0x7eb" -> "0x83b" [color="green" label=" If(ULE(_value, Ia_store_some_var_9), 1, 0) != 0"];
"0x7eb" -> "0x837" [color="red" label=" Not(If(ULE(_value, Ia_store_some_var_9), 1, 0) != 0)"];
"0x3f3"[label="0x000003f3 DUP1 \l0x000003f4 DUP3 \l0x000003f5 SUB \l0x000003f6 DUP1 \l0x000003f7 MLOAD \l0x000003f8 PUSH1 0x01 \l0x000003fa DUP4 \l0x000003fb PUSH1 0x20 \l0x000003fd SUB \l0x000003fe PUSH2 0x0100 \l0x00000401 EXP \l0x00000402 SUB \l0x00000403 NOT \l0x00000404 AND \l0x00000405 DUP2 \l0x00000406 MSTORE \l0x00000407 PUSH1 0x20 \l0x00000409 ADD \l0x0000040a SWAP2 \l0x0000040b POP \l"];
"0x3f3" -> "0x40c" [color="black"];
}
